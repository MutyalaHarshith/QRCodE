import logging
import os
import png
from pyqrcode import QRCode
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from telegram import Update
TOKEN = "<YOUR API TOKEN>"
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
start_msg = '''
<b>‡∞π‡∞æ‡∞Ø‡±ç ‡∞Æ‡∞ø‡∞§‡±ç‡∞∞‡∞Æ‡∞æ </b>üëãüëã
<i>Qr ‡∞ï‡±ã‡∞°‡±ç ‡∞ú‡±Ü‡∞®‡∞∞‡±á‡∞ü‡∞∞‡±ç ‡∞¨‡±ã‡∞ü‡±ç ‡∞ï‡±Å ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç</i>
<i>‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞á‡∞Æ‡±Ü‡∞Ø‡∞ø‡∞≤‡±ç ID, ‡∞ü‡±Ü‡∞ï‡±ç‡∞∏‡±ç‡∞ü‡±ç, url, Spotify ‡∞™‡∞æ‡∞ü ‡∞≤‡∞ø‡∞Ç‡∞ï‡±ç ‡∞Æ‡±ä‡∞¶‡∞≤‡±à‡∞®‡∞µ‡∞æ‡∞ü‡∞ø‡∞®‡∞ø ‡∞®‡∞æ‡∞ï‡±Å ‡∞™‡∞Ç‡∞™‡∞Ç‡∞°‡∞ø, ‡∞®‡±á‡∞®‡±Å ‡∞¶‡∞æ‡∞®‡∞ø ‡∞ï‡±ã‡∞∏‡∞Ç qr ‡∞ï‡±ã‡∞°‡±ç‚Äå‡∞®‡±Å ‡∞∞‡±Ç‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞®‡±Å</i>
<b>‡∞°‡±à‡∞∞‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞Æ‡±Ä‡∞°‡∞ø‡∞Ø‡∞æ ‡∞´‡±à‡∞≤‡±ç‚Äå‡∞≤‡∞ï‡±Å ‡∞Æ‡∞¶‡±ç‡∞¶‡∞§‡±Å ‡∞≤‡±á‡∞¶‡±Å</b>
<i>‡∞Æ‡±Ä‡∞∞‡±Å ‡∞´‡±à‡∞≤‡±ç‚Äå‡∞≤‡∞ï‡±Å ‡∞®‡±á‡∞∞‡±Å‡∞ó‡∞æ ‡∞≤‡∞ø‡∞Ç‡∞ï‡±ç‚Äå‡∞®‡±Å ‡∞é‡∞≤‡∞æ ‡∞™‡∞Ç‡∞™‡∞µ‡∞ö‡±ç‡∞ö‡±Å ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞ï‡∞∞‡±ç‡∞§ @MutyalaHarshith</i>
'''
help_msg = '''
<i> ‡∞®‡∞æ‡∞ï‡±Å ‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞á‡∞Æ‡±Ü‡∞Ø‡∞ø‡∞≤‡±ç ‡∞ê‡∞°‡∞ø, ‡∞µ‡∞ö‡∞®‡∞Ç, url ‡∞Æ‡±ä‡∞¶‡∞≤‡±à‡∞®‡∞µ‡∞ø ‡∞™‡∞Ç‡∞™‡∞Ç‡∞°‡∞ø (‡∞Æ‡±Ä‡∞°‡∞ø‡∞Ø‡∞æ ‡∞´‡±à‡∞≤‡±ç‚Äå‡∞≤‡±Å ‡∞≤‡±á‡∞µ‡±Å...)</i>
<i>‡∞®‡±á‡∞®‡±Å ‡∞¶‡∞æ‡∞®‡∞ø ‡∞ï‡±ã‡∞∏‡∞Ç Qr ‡∞ï‡±ã‡∞°‡±ç‚Äå‡∞®‡±Å ‡∞∞‡±Ç‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞ø, ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞™‡∞Ç‡∞™‡±Å‡∞§‡∞æ‡∞®‡±Å ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞ï‡∞∞‡±ç‡∞§ @MutyalaHarshith</i>
'''


def start(update: Update, context: CallbackContext) -> None:
    """Send a message when the command /start is issued."""
    update.message.reply_html(start_msg)


def help_command(update: Update, context: CallbackContext) -> None:
    """Send a message when the command /help is issued."""
    update.message.reply_html(help_msg)


def msg(update: Update, context: CallbackContext) -> None:
    """qr ‡∞ï‡±ã‡∞°‡±ç‚Äå‡∞®‡∞ø ‡∞™‡±ä‡∞Ç‡∞¶‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞ü‡±Ü‡∞ï‡±ç‡∞∏‡±ç‡∞ü‡±ç ‡∞≤‡±á‡∞¶‡∞æ url‡∞®‡∞ø ‡∞™‡∞Ç‡∞™‡∞Ç‡∞°‡∞ø ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞ï‡∞∞‡±ç‡∞§ @MutyalaHarshith"""
    text = update.message.text
    message_id = update.message.message_id
    qr_file = f'{message_id}.png'
    try:
        update.message.reply_text("‡∞â‡∞§‡±ç‡∞™‡∞§‡±ç‡∞§‡∞ø ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±ã‡∞Ç‡∞¶‡∞ø")
        Qr_Code = QRCode(text)
        Qr_Code.png(qr_file, scale=10)
        update.message.reply_photo(photo=open(
            qr_file, "rb"), reply_to_message_id=message_id, caption=f"‡∞¶‡±Ä‡∞®‡∞ø ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞∞‡±Ç‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞® ‡∞Æ‡±Ä Qr ‡∞ï‡±ã‡∞°‡±ç ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞ï‡∞∞‡±ç‡∞§ @MutyalaHarshith ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Æ‡±Ä ‡∞µ‡∞ö‡∞®‡∞Ç ¬ª'{text}'")
        update.message.reply_text("Finished")
        os.remove(qr_file)
    except Exception:
        update.message.reply_text("‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞§‡∞∞‡±ç‡∞µ‡∞æ‡∞§ ‡∞Æ‡∞≥‡±ç‡∞≤‡±Ä ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø")


def main():
    updater = Updater(TOKEN, use_context=True)
    PORT = int(os.environ.get('PORT', '8443'))
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, msg))
    # Start The bot
    updater.start_webhook(listen="0.0.0.0",
                          port=PORT,
                          url_path=TOKEN)
    updater.bot.set_webhook(
        "https://<YOUR APP NAME>.herokuapp.com/" + TOKEN)
    updater.idle()


if __name__ == '__main__':
    main()
